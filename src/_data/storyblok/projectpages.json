[{"id":119651887,"parent_id":119228869,"name":"Teaching","slug":"teaching","full_slug":"projects/teaching","title":"Teaching","summary":"For the past 4 years, I part-time taught web development to high schoolers and students.\n\n(linken naar presentaties of lesprogramma's of snippets?)","description":[],"technologies":["HTML","CSS","JS","Node.js"],"links":{"site":"","detail":"projects/teaching","repository":"","documentation":""}},{"id":119651685,"parent_id":119228869,"name":"CMD Digital Playground","slug":"cmd-digital-playground","full_slug":"projects/cmd-digital-playground","title":"CMD Digital Playground","summary":"Final assignment of the minor Web Development 2020. This progressive web app allows non-tech-y textwriters, developers, students and other collaborators to contribute to an environment that contains (in-depth) information about Communication and Multimedia Design, reflects CMD's view on Digital Interactive Design and displays their other activities or initiatives such as Battery or Golden Dot Awards.","description":["A new, statically generated website that functions as a fundament for a new site for Communication & Multimedia Design at the Amsterdam University of Applied Sciences.\n\nUsing Headless CMS Storyblok, students and teachers can create custom components and pages.\n\nAlong with this, a handbook for onboarding new collaborators which explains how this new CMS and website works."],"links":{"site":"https://cmd-digital-playground.now.sh","detail":"projects/cmd-digital-playground","repository":"https://github.com/deannabosschert/meesterproef-1920","documentation":"https://cmd-digital-playground.gitbook.io/design-rationale-cmd-digital-playground/"}},{"id":119651671,"parent_id":119228869,"name":"Datavisualizations","slug":"datavisualizations","full_slug":"projects/datavisualizations","title":"Datavisualizations","summary":"Digital prototype of a storytelling-based series of datavisualizations based on data from a survey.","description":["Exploring Charts.js in combination with Vue.js"],"links":{"site":"https://datavisualisaties.netlify.app/#/","detail":"projects/datavisualizations","repository":"https://github.com/deannabosschert/datavis-23","documentation":"https://deanna-bosschert.gitbook.io/dataviz-2021/"}},{"id":119648888,"parent_id":119228869,"name":"Lyrics animation","slug":"lyrics-animation","full_slug":"projects/lyrics-animation","title":"Lyrics animation","summary":"Designed the lyrics of a song for Spotify, based on visual research.","description":["Lyric video for the first minute of Little Big's song 'I'm Okay', where the design matches the feel of the song.","To explore working with Procreate and gaining some illustration-skills, every frame is hand-drawn."],"links":{"site":"https://vimeo.com/500208714","detail":"projects/lyrics-animation","repository":"https://github.com/deannabosschert/vormgeving_2","documentation":"https://deannabosschert.gitbook.io/vormgeving-2/"}},{"id":119645487,"parent_id":119228869,"name":"Blogposts","slug":"blogposts","full_slug":"projects/blogposts","title":"Blogposts","summary":"Collection of articles that i've written during the Weekly Nerd course @cmda-minor-web Â· 2019-2020","description":["3 articles:\n\n- EHBT\n- Atomic Design\n- Designing when you can't design"],"links":{"site":"https://weekly-nerd.netlify.app/","detail":"projects/blogposts","repository":"https://github.com/deannabosschert/weekly-nerd-articles-1920","documentation":"https://medium.com/@deanna.bosschert"}},{"id":119638744,"parent_id":119228869,"name":"Functional Programming","slug":"functional-programming","full_slug":"projects/functional-programming","title":"Functional Programming","summary":"A dataset of a questionnaire that the students filled in during the Information Design Datavisualization-course, is fetched and cleaned using filters based on functional programming principles.","description":["Using D3.js, a 'dirty' dataset with survey data from a questionnaire that a group of students filled in during the Information Design Datavisualization-course is fetched.\n\nThen, the dataset is cleaned using functional patterns and following general functional programming principles.\n"],"links":{"site":"https://functional-programming-2021.netlify.app/","detail":"projects/functional-programming","repository":"https://github.com/deannabosschert/functional-programming","documentation":"https://github.com/deannabosschert/functional-programming/wiki"}},{"id":119511415,"parent_id":119228869,"name":"Project Web","slug":"project-web","full_slug":"projects/project-web","title":"Project Web","summary":"An interactive multi-device prototype for photographers on the go. Travelling photographers can view, rate and annotate their pictures using their phone.","description":["When you're on vacation and don't have much time sorting out and rating your pictures in Lightroom every night, you can use picture.this to help you out. Upload your photos to a Flickr album once you're in your hotel, and then during the day, you can use this website to scroll through your photos and rate them or leave comments. Spread out this chore over the vacation whenever you have a moment on your phone!\n\nhoto's you've uploaded to Flickr are displayed below chronologically, starting from the first day of the trip. Scroll through the pics, give them a rating and add some comments.\n\nYou can also gain some visual inspiration by entering a topic you'll encounter on your way today, and get a nice mood board of that topic out of the Unsplash and Pinterest API.\n\nYou can also stash a few annotations of experiences on this trip that you'd like to remember afterwards, on the site. These will come in handy once you get home when making descriptions per photo collection, or when making a photo book.\n"],"links":{"site":"https://project-web-2021.netlify.app/","detail":"projects/project-web","repository":"https://github.com/deannabosschert/project-web","documentation":"https://deanna-bosschert-1.gitbook.io/project-web/"}},{"id":119511402,"parent_id":119228869,"name":"Frontend Data","slug":"frontend-data","full_slug":"projects/frontend-data","title":"Frontend Data","summary":"Datavisualization of the parking spaces that will have conflict with the current COVID_19 restrictions, made with D3.js. Based on RDW-data, cleaned beforehand.","description":["Using datasets from the Dutch RDW, the opening times of parking spaces/garages are compared to the enforcing of a (Covid)Curfew. Researched what spaces would have conflicting times and will create possible problems.\n\nData was fetched, cleaned, filtered and then turned into an interactive d3.js-visualization which compares what cities have the most conflicting spaces."],"links":{"site":"https://frontend-data-2021.netlify.app/","detail":"projects/frontend-data","repository":"https://github.com/deannabosschert/frontend-data","documentation":"https://github.com/deannabosschert/frontend-data/wiki"}},{"id":119510750,"parent_id":119228869,"name":"Progressive Web Apps","slug":"progressive-web-apps","full_slug":"projects/progressive-web-apps","title":"Progressive Web Apps","summary":"Photo album, data fetched using the Flickr API. Optimized performance to achieve maximum Lighthouse score. Service worker added and turned into a PWA.","description":["A client side web application converted to a server side rendered application. Added functionalities based on the Service Worker and turned the application into a Progressive Web App. Lastly, implemented a series of optimisations to improve the performance of the application. Achieved 100% scores using Lighthouse Audits."],"links":{"site":"https://progressive-web-apps-2021.netlify.app/","detail":"projects/progressive-web-apps","repository":"https://github.com/deannabosschert/progressive-web-apps-2021","documentation":"https://github.com/deannabosschert/progressive-web-apps-2021/wiki/Service-worker-en-Performanceverbeteringen"}},{"id":119510426,"parent_id":119228869,"name":"Real-Time Web","slug":"real-time-web","full_slug":"projects/real-time-web","title":"Real-Time Web","summary":"Playing with sockets. You choose a photo category and are then matched with another active user. Once matched, a set of photos from both your categories will be fetched from Unsplash. You then both vote for the best photo out of two, 4 rounds. The person that chose the category with the most voted for photos, wins!","description":["Learned to setup an open connection between the client and the server, which enabled me to send data in real-time both ways, at the same time. The concept itself doesn't make much sense but it was a great way of finding out how sockets work."],"technologies":["JS","Node.js","Sockets.js","HTML","CSS"],"links":{"site":"https://real-time-web-21.herokuapp.com/","detail":"projects/real-time-web","repository":"https://github.com/deannabosschert/real-time-web-2021","documentation":"https://github.com/deannabosschert/real-time-web-2021/wiki"}},{"id":119509205,"parent_id":119228869,"name":"Matcher","slug":"matcher","full_slug":"projects/matcher","title":"Matcher","summary":"'MapMatcher': a \"dating site\" that tries to connect people that want to go to the same destination. It will take in your preferences and criteria and match you with people whose criteria you match.\n","description":["A dating site that matches people by their preference of which place they want to travel to. People will state where they want to go and who they want to go with. Then, they get matched with people that want to go to that same area. \n\nGroup project, mainly focused on collaboration via GitHub and how to make a login/register/edit-system."],"links":{"site":"https://project-tech-2021.herokuapp.com/","detail":"projects/matcher","repository":"https://github.com/deannabosschert/Matcher","documentation":"https://github.com/deannabosschert/Matcher/wiki"}},{"id":119507568,"parent_id":119228869,"name":"NetlifyCMS Proof of Concept","slug":"netlifycms-proof-of-concept","full_slug":"projects/netlifycms-proof-of-concept","title":"NetlifyCMS Proof of Concept","summary":"Existing websites rebuilt in combination with NetlifyCMS; implementation for a Proof of Concept that using a Headless CMS could be a decent alternative to WordPress.","description":["Two sites are rebuilt from scratch, the data pulled out to Global Data level, and then connected to NetlifyCMS so the client is able to edit the content themselves with minimum hassle.\n\nGoal was to convince some developers that they should try switching from WordPress to another CMS. With these proof of concepts was pointed out that with a fairly simple connection to a Headless CMS, content editing is possible without having to miss out on developer freedom."],"links":{"site":"https://activecollective-netlify.netlify.app/","detail":"projects/netlifycms-proof-of-concept","repository":"https://github.com/deannabosschert/CMS-template-AC","documentation":"https://techkech.notion.site/3-Implementatie-in-Proof-of-Concept-5aac367224644853af7c5fe7ae2c244c"}},{"id":119506176,"parent_id":119228869,"name":"Pointer Project","slug":"pointer-project","full_slug":"projects/pointer-project","title":"Project Pointer","summary":"'Zorgcowboys' project for KRO-NCRV Pointer during Information Design 2020. Users can find their own healthcare institution or an institution of interest and can shop with the profit they made in a specific year. Users can buy silly things in the webshop like a private jet or an Aston Martin supercar.\n\n","description":["Users can find their own Dutch healthcare institution or an institution of interest and can shop with the profit they made in a specific year. Users can buy silly things in the webshop like a private jet or an Aston Martin supercar, which shows how excessive some amounts of profit can be. At checkout, they receive a receipt stating what other, actual healthcare products could've been bought with that money.\n\nAt the stats page users can then dive into the numbers and identify the zorgcowboys. They see how the chosen healthcare institution compares to the rest of the dataset; Netherlands in general, and to the norm ('from what range can we find this institution suspicious?'). This way, with some explanation about what a zorgcowboy is, they can identify if their chosen healthcare institution is one."],"links":{"site":"https://pointer-project.netlify.app/","detail":"projects/pointer-project","repository":"https://github.com/deannabosschert/pointer-project","documentation":"https://paper.dropbox.com/doc/Design-Rationale--BepS9NirWXzwQvE32CVkzpBtAQ-gMkTYJUu7zUybJ3wlmf4hs"}},{"id":119464691,"parent_id":119228869,"name":"Frontend Applications","slug":"frontend-applications","full_slug":"projects/frontend-applications","title":"Frontend Applications","summary":"First-time exploring Vue.js, in which data is loaded via an API using SPARQL, then dynamically rendered to views.","description":["Client-side application in JavaScript which dynamically renders data to views using a front-end framework; Vue. Includes reflection on the merits and costs of frameworks together.\n\nUsing SPARQL-queries, data is fetched from the National Museum of World Cultures institute-API, and a set of all photos in their collection is rendered on this site to explore. "],"links":{"site":"frontend-applications-deannabosschert.netlify.com/#/","detail":"projects/frontend-applications","repository":"https://github.com/deannabosschert/frontend-applications","documentation":"https://github.com/deannabosschert/frontend-applications/wiki"}},{"id":119228870,"parent_id":119228869,"name":"Code Cookbook","slug":"code-cookbook","full_slug":"projects/code-cookbook","title":"Code Cookbook","summary":"Guide to the best-practices for building and deploying web applications.","description":["Something something"],"links":{"site":"https://www.codecookbook.nl/","detail":"projects/code-cookbook","repository":"https://github.com/deannabosschert/codecookbook-template","documentation":"https://drive.google.com/file/d/1x1O7WHg0cANSw9O2grcz3nYhLdfOblzE/view?usp=sharing"}}]